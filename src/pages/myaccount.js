import React, { useEffect, useState } from 'react'
import { useRouter } from 'next/router';
import Link from 'next/link';
import axios from 'axios';
import { ToastContainer, toast } from 'react-toastify';
import Head from 'next/head';


const MyAccount = ({ user }) => {
    const [name, setName] = useState('');
    const [address, setAddress] = useState('');
    const [phone, setPhone] = useState('');
    const [password, setPassword] = useState('');
    const [email, setEmail] = useState('')
    const [pincode, setPinCode] = useState('');
    const router = new useRouter();
    const [disabled, setDisabled] = useState(true)
    useEffect(() => {
        const token = JSON.parse(localStorage.getItem('myuser'))
        if (!token) {
            push('/')

        } else {
            const getUser = async () => {
                const userDetail = await axios.post(`${process.env.NEXT_PUBLIC_HOST}/api/getuser`, { token: token.token, email: token.email });

                if (userDetail.status === 200) {

                    setEmail(userDetail.data.email);
                    setName(userDetail.data.name);
                    setAddress(userDetail?.data?.address)
                    setPhone(userDetail?.data?.phone);
                    setPinCode(userDetail?.data?.pincode);

                } else {
                    toast('error while getting the user detail')
                }
            }
            getUser();
        }

    }, [router.query]);
    const inputValueHandeler = async (e) => {
        if (e.target.name === 'name') {
            setName(e.target.value)
        }
        else if (e.target.name === 'email') {
            setEmail(e.target.value)
        }
        else if (e.target.name === 'address') {
            setAddress(e.target.value)
        }
        else if (e.target.name === 'phone') {
            setPhone(e.target.value)
        }
        else if (e.target.name === 'pincode') {
            setPinCode(e.target.value)


        }

        else if (e.target.name === 'password') {
            setPassword(e.target.value)
        }

        if (name && email && address && phone && pincode) {
            setDisabled(false)
        } else {
            setDisabled(true)
        }
    }

    const handleOrder = async (e) => {
        e.preventDefault();

        const token = JSON.parse(localStorage.getItem('myuser'))

        const updateUser = await axios.put(`${process.env.NEXT_PUBLIC_HOST}/api/updateuser`, { name, email, address, phone, pincode, password, token });

        if (updateUser.status === 200) {
            toast("User profile update successfully")
        } else {
            toast("SOmething went wrong")
        }
    }
    return (
        <form onSubmit={handleOrder} className='container mx-8 max-sm:mx-0 md:m-auto  p-10'>
            <Head>
                <title>Matti's store | Account detail</title>
                <meta name="description" content="Generated by create next app" />
                <meta name="viewport" content="width=device-width, initial-scale=1" />
                <link rel="icon" href="/favicon.ico" />
            </Head>
            <ToastContainer
                position="bottom-center"
                autoClose={5000}
                hideProgressBar={false}
                newestOnTop={false}
                closeOnClick
                rtl={false}
                pauseOnFocusLoss
                draggable
                pauseOnHover
                theme="light"
            />
            <h1 className='text-bold text-3xl my-8 text-center'>Update Your Account</h1>
            <h2 className='text-semi text-xl'>Profile Detail</h2>
            <div className="mx-auto max-sm:flex-col flex">
                <div className="px-2 max-sm:w-full w-1/2 ">
                    <div className=" mb-4">
                        <label htmlFor="name" className="leading-7 text-sm text-gray-600">Name</label>
                        <input required value={name} onChange={inputValueHandeler} type="text" id="name" name="name" className="w-full bg-white rounded border border-gray-300 focus:border-indigo-500 focus:ring-2 focus:ring-indigo-200 text-base outline-none text-gray-700 py-1 px-3 leading-8 transition-colors duration-200 ease-in-out" />
                    </div>
                </div>
                <div className="px-2 max-sm:w-full w-1/2 ">
                    <div className=" mb-4">
                        <label htmlFor="email" className="leading-7 text-sm text-gray-600">Email</label>
                        <input required value={user.email} type="email" id="email" name="email" className="w-full bg-white rounded border border-gray-300 focus:border-indigo-500 focus:ring-2 focus:ring-indigo-200 text-base outline-none text-gray-700 py-1 px-3 leading-8 transition-colors duration-200 ease-in-out" readOnly />

                    </div>
                </div>
            </div>

            <div className="px-2  w-full">
                <div className=" mb-4">
                    <label htmlFor="address" className="leading-7 text-sm text-gray-600">Address</label>
                    <textarea value={address} onChange={inputValueHandeler} id="address" name="address" cols="30" rows="10" className="w-full bg-white rounded border border-gray-300 focus:border-indigo-500 focus:ring-2 focus:ring-indigo-200 h-32 text-base outline-none text-gray-700 py-1 px-3 resize-none leading-6 transition-colors duration-200 ease-in-out" ></textarea>
                </div>
            </div>
            <div className="mx-auto max-sm:flex-col flex">
                <div className="px-2 max-sm:w-full w-1/2 ">
                    <div className=" mb-4">
                        <label htmlFor="phone" className="leading-7 text-sm text-gray-600">Phone</label>
                        <input required value={phone} onChange={inputValueHandeler} type="phone" id="phone" name="phone" className="w-full bg-white rounded border border-gray-300 focus:border-indigo-500 focus:ring-2 focus:ring-indigo-200 text-base outline-none text-gray-700 py-1 px-3 leading-8 transition-colors duration-200 ease-in-out" />
                    </div>
                </div>
                <div className="px-2 max-sm:w-full w-1/2 ">

                    <div className=" mb-4">
                        <label htmlFor="pincode" className="leading-7 text-sm text-gray-600">Pin Code</label>
                        <input required onChange={inputValueHandeler} value={pincode} type="text" id="pincode" name="pincode" className="w-full bg-white rounded border border-gray-300 focus:border-indigo-500 focus:ring-2 focus:ring-indigo-200 text-base outline-none text-gray-700 py-1 px-3 leading-8 transition-colors duration-200 ease-in-out" />
                    </div>
                </div>

            </div>
            <h2 className='text-semi text-xl'>Change Password</h2>

            <div className="mx-auto max-sm:flex-col flex">
                <div className="px-2 max-sm:w-full w-1/2 ">
                    <div className=" mb-4">
                        <label htmlFor="password" className="leading-7 text-sm text-gray-600">New Password</label>
                        <input value={password} onChange={inputValueHandeler} min={11}
                            max={20} type="password" id="password" name="password" className="w-full bg-white rounded border border-gray-300 focus:border-indigo-500 focus:ring-2 focus:ring-indigo-200 text-base outline-none text-gray-700 py-1 px-3 leading-8 transition-colors duration-200 ease-in-out" />
                    </div>
                </div>

            </div>
            <div className="sm:mx-auto max-sm:w-1/2 mx-8 disabled:cursor-not-allowed">

                <button type='submit' className="flex items-center justify-center mx-auto mt-2 text-white  bg-indigo-500 border-0 py-2 md:px-4 px-2 disabled:cursor-not-allowed disabled:bg-indigo-200 focus:outline-none hover:bg-indigo-600 rounded-full text-lg">Update</button>
            </div>
        </form>
    )
}

export default MyAccount
